=begin
----------- Problem 12 ------------
 
 The sequence of triangle numbers is generated by adding the natural numbers. 
 So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first 
 ten terms would be:
 
 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

 Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

 We can see that 28 is the first triangle number to have over five divisors.

 What is the value of the first triangle number to have over five hundred divisors?

=end

# Find all the factors of a given number

def findDivisors(num)
  factors = Array.new
  factors.push 1,num 
  for i in 2..Math.sqrt(num).floor
    if num % i == 0
      factors.push(i)
      # Push the corresponding divisor if its not the square root
      factors.push num/i if i != Math.sqrt(num).ceil
    end
  end
  return factors
end

# return the first tri num to have $amount divisors

def smallestTriangleNumber(amount)
  n = nthTriangleNumber = divisors = 1
  until divisors > amount
    n += 1
    nthTriangleNumber += n
    divisors = findDivisors( nthTriangleNumber ).length
  end
  return nthTriangleNumber
end

# answer to problem

puts smallestTriangleNumber(500)



