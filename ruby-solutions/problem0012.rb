=begin

  Problem 12:
  
  The sequence of triangle numbers is generated by adding the 
  natural numbers. So the 7th triangle number would be 1 + 2 + 
  3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

  Let us list the factors of the first seven triangle numbers:

   1: 1
   3: 1,3
   6: 1,2,3,6
  10: 1,2,5,10
  15: 1,3,5,15
  21: 1,3,7,21
  28: 1,2,4,7,14,28
  
  We can see that 28 is the first triangle number to have over 
  five divisors.

  What is the value of the first triangle number to have over 
  five hundred divisors?

=end

class TriangleNumbers
  
  def initialize
    @value, @index = 0, 1
  end
  
  def next
    @value += @index
    @index = @index.next
    @value
  end
  
end

def divisors_count_for(num)
  count = 2
  sqrt = Math.sqrt(num)
  max = sqrt.floor
  if max == sqrt.ceil
    count += 1
    max -= 1
  end
  (2..max).each do |x|
    count += 2 if num % x == 0
  end
  count
end

def tri_num_over_n_divisors(n)
  tri_nums = TriangleNumbers.new
  begin
    tri_num = tri_nums.next
    divisors_count = divisors_count_for tri_num
  end until divisors_count > n
  tri_num
end

tri_num_over_n_divisors(500)
# => 76576500

# Benchmark
# 10.600000   0.010000  10.610000  (10.608499)
